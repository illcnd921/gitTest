{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\CHAT\\\\client\\\\src\\\\components\\\\UserLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { CommentOutlined } from \"@ant-design/icons\";\nimport _ from \"lodash\";\nimport { io, Socket } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst button = {\n  width: \"10%\",\n  height: 50,\n  fontWeight: \"bold\",\n  borderRadius: 10,\n  fontSize: 18,\n  backgroundColor: \"#075e54\",\n  borderWidth: 0,\n  color: \"#fff\",\n  margin: 10\n};\nexport default function UserLogin(_ref) {\n  _s();\n  let {\n    setUser,\n    setRoomNo\n  } = _ref;\n  const [user, setAUser] = useState(\"\");\n  const [roomNo, setARoomNo] = useState(\"\");\n  const socketio = io.connect(\"http://192.168.0.120:9999\");\n  const startRoomNo = e => {\n    setARoomNo(e.target.value);\n    Socketio.emit(\"room\", roomNo);\n  };\n  function handleSetUser() {\n    if (!user) return;\n    // localStorage : 전역에 접근 가능, storage에 저장된 데이터는 모두 문자열만 사용 가능하기 때문에 다른 타입의 데이터를 사용할 때에는 JSON형태로 읽고 써야 함\n    // 동일한 pc안에서 동일한 브라우저를 사용했을 때에 사용\n    // +)sessionStorage는 전역에 접근가능하지만 브라우저 창이 닫히면 세션이 종료되면서 storage에 저장된 데이터도 소멸됨\n    localStorage.setItem(\"user\", user);\n    setUser(user);\n    localStorage.setItem(\"roomNo\", roomNo);\n    setRoomNo(roomNo);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        margin: 10,\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CommentOutlined, {\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), \" Super Chat\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          margin: 10,\n          height: 30,\n          width: \"25%\",\n          borderRadius: 10,\n          borderWidth: 10,\n          fontSize: 15,\n          paddingInline: 5\n        },\n        value: user,\n        onChange: e => setAUser(e.target.value),\n        placeholder: \"Write a random name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          margin: 10,\n          height: 30,\n          width: \"25%\",\n          borderRadius: 10,\n          borderWidth: 10,\n          fontSize: 15,\n          paddingInline: 5\n        },\n        value: roomNo,\n        onChange: startRoomNo(),\n        placeholder: \"Write a random name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSetUser(),\n        style: button,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(UserLogin, \"mugd8cZxuxfgtjMCeYqohR1Oj2E=\");\n_c = UserLogin;\nvar _c;\n$RefreshReg$(_c, \"UserLogin\");","map":{"version":3,"names":["React","useState","CommentOutlined","_","io","Socket","button","width","height","fontWeight","borderRadius","fontSize","backgroundColor","borderWidth","color","margin","UserLogin","setUser","setRoomNo","user","setAUser","roomNo","setARoomNo","socketio","connect","startRoomNo","e","target","value","Socketio","emit","handleSetUser","localStorage","setItem","textAlign","display","justifyContent","paddingInline"],"sources":["C:/Dev/CHAT/client/src/components/UserLogin.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { CommentOutlined } from \"@ant-design/icons\";\r\nimport _ from \"lodash\";\r\nimport { io, Socket } from \"socket.io-client\";\r\n\r\nconst button = {\r\n  width: \"10%\",\r\n  height: 50,\r\n  fontWeight: \"bold\",\r\n  borderRadius: 10,\r\n  fontSize: 18,\r\n  backgroundColor: \"#075e54\",\r\n  borderWidth: 0,\r\n  color: \"#fff\",\r\n  margin: 10,\r\n};\r\n\r\nexport default function UserLogin({ setUser, setRoomNo }) {\r\n  const [user, setAUser] = useState(\"\");\r\n  const [roomNo, setARoomNo] = useState(\"\");\r\n  const socketio = io.connect(\"http://192.168.0.120:9999\");\r\n  const startRoomNo = (e) => {\r\n    setARoomNo(e.target.value);\r\n    Socketio.emit(\"room\", roomNo);\r\n  }\r\n\r\n  function handleSetUser() {\r\n    if (!user) return;\r\n    // localStorage : 전역에 접근 가능, storage에 저장된 데이터는 모두 문자열만 사용 가능하기 때문에 다른 타입의 데이터를 사용할 때에는 JSON형태로 읽고 써야 함\r\n    // 동일한 pc안에서 동일한 브라우저를 사용했을 때에 사용\r\n    // +)sessionStorage는 전역에 접근가능하지만 브라우저 창이 닫히면 세션이 종료되면서 storage에 저장된 데이터도 소멸됨\r\n    localStorage.setItem(\"user\", user);\r\n    setUser(user);\r\n    localStorage.setItem(\"roomNo\", roomNo);\r\n    setRoomNo(roomNo);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ margin: 10, textAlign: \"center\" }}>\r\n        <CommentOutlined color={\"green\"} /> Super Chat{\" \"}\r\n      </h1>\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <input\r\n          style={{\r\n            margin: 10,\r\n            height: 30,\r\n            width: \"25%\",\r\n            borderRadius: 10,\r\n            borderWidth: 10,\r\n            fontSize: 15,\r\n            paddingInline: 5,\r\n          }}\r\n          value={user}\r\n          onChange={(e) => setAUser(e.target.value)}\r\n          placeholder=\"Write a random name\"\r\n        ></input>\r\n        <input\r\n          style={{\r\n            margin: 10,\r\n            height: 30,\r\n            width: \"25%\",\r\n            borderRadius: 10,\r\n            borderWidth: 10,\r\n            fontSize: 15,\r\n            paddingInline: 5,\r\n          }}\r\n          value={roomNo}\r\n          onChange={startRoomNo()}\r\n          placeholder=\"Write a random name\"\r\n        ></input>\r\n        <button onClick={() => handleSetUser()} style={button}>\r\n          Login\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}